
# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('csmaca', ['core', 'network', 'propagation'])
    module.source = [
	'model/csmaca-net-device.cc',
	'model/csmaca-mac.cc',
	'model/csmaca-phy.cc',
	'model/csmaca-channel.cc',
	'model/csmaca-phy-state-helper.cc',
	'model/csmaca-mac-queue.cc',
	'model/csmaca-mac-header.cc',
	'model/csmaca-mac-trailer.cc',
	'model/csmaca-preamble.cc',
	'model/csmaca-interference-helper.cc',
        'model/csmaca-random-stream.cc',
        'helper/csmaca-helper.cc',
	'model/csmaca.cc'
        ]

    module_test = bld.create_ns3_module_test_library('csmaca')
    module_test.source = [
        'test/csmaca-test-suite.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'csmaca'
    headers.source = [
	'model/csmaca-net-device.h',
	'model/csmaca-mac.h',
	'model/csmaca-phy.h',
	'model/csmaca-channel.h',
	'model/csmaca-phy-state.h',
	'model/csmaca-phy-state-helper.h',
	'model/csmaca-mac-queue.h',
	'model/csmaca-mac-header.h',
	'model/csmaca-mac-trailer.h',
	'model/csmaca-preamble.h',
	'model/csmaca-interference-helper.h',
        'model/csmaca-random-stream.h',
        'helper/csmaca-helper.h',
	'model/csmaca.h'
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.recurse('examples')

    # bld.ns3_python_bindings()

